package ${package}.controller;


import ${package}.model.${classEntity};
import ${package}.service.${ClassName}Service;
import com.jjh.common.web.controller.BaseController;
import com.jjh.common.web.form.PageRequestForm;
import com.jjh.common.web.form.PageResponseForm;
import com.jjh.common.web.form.SimpleResponseForm;
import com.jjh.framework.aspect.operationlog.BusinessType;
import com.jjh.framework.aspect.operationlog.Log;
import com.github.xiaoymin.knife4j.annotations.ApiOperationSupport;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;
#if($importAndExport == true)
import org.springframework.web.multipart.MultipartFile;
import com.jjh.framework.plugin.excel.ExcelUtil;
#end

import jakarta.validation.Valid;
import java.util.List;

/**
*   ${tableComment}管理
 *
 * @author ${author}
 * @date ${datetime}
*/
@Tag(name = "${tableComment}管理")
@RestController
@RequestMapping("/${moduleName}/${classname}")
public class ${ClassName}Controller extends BaseController {

    @Autowired
    private ${ClassName}Service ${className}Service;


    /**
     * ${tableComment}列表
     */
    @Operation(summary = "${tableComment}列表")
    @ApiOperationSupport(order = 10)
    @PostMapping("/list")
    public SimpleResponseForm<PageResponseForm<${classEntity}>> list(@RequestBody PageRequestForm<${classEntity}> form) {
        List<${classEntity}> list = ${className}Service.list(form);
        return page(form, list);
    }

    /**
     * 新增${tableComment}
     */
    @Log(title = "新增${tableComment}", businessType = BusinessType.INSERT)
    @Operation(summary = "新增${tableComment}")
    @ApiOperationSupport(order = 20, ignoreParameters = {"id","createTime","updateTime","createBy","updateBy"})
    @PostMapping("/add")
    public SimpleResponseForm<${classEntity}> add(@Valid @RequestBody ${classEntity} entity) {
        ${classEntity} result = ${className}Service.add(entity);
        return success();
    }

    /**
     * 更新${tableComment}
     */
    @Log(title = "更新${tableComment}", businessType = BusinessType.UPDATE)
    @Operation(summary = "更新${tableComment}")
    @ApiOperationSupport(order = 30, ignoreParameters = {"createTime","updateTime","createBy","updateBy"})
    @PostMapping("/update")
    public SimpleResponseForm<${classEntity}> update(@Valid @RequestBody ${classEntity} entity) {
        ${classEntity} result = ${className}Service.update(entity);
        return success();
    }

    /**
     * 删除${tableComment}
     */
    @Log(title = "删除${tableComment}", businessType = BusinessType.DELETE)
    @Operation(summary = "删除${tableComment}")
    @ApiOperationSupport(order = 40)
    @GetMapping("/delete")
    public SimpleResponseForm<String> delete(String ids) {
        ${className}Service.del(ids);
        return success();
    }

#if($importAndExport == true)
    /**
     * ${tableComment}导入模板
     * @return
     */
    @Operation(summary = "${tableComment}导入模板")
    @ApiOperationSupport(order = 50)
    @GetMapping("/import_template")
    public SimpleResponseForm<String> importTemplate() {
        ExcelUtil<${classEntity}> util = new ExcelUtil<>(${classEntity}.class);
        return success(util.importTemplateExcel( "${tableComment}导入"));
    }

    /**
     * ${tableComment}导入
     * @return
     */
    @Log(title = "${tableComment}导入", businessType = BusinessType.IMPORT)
    @Operation(summary = "${tableComment}导入")
    @ApiOperationSupport(order = 60)
    @PostMapping("/import_data")
    public SimpleResponseForm<String> importData(MultipartFile file, boolean updateSupport) {
        if (file == null) {
            return error("请选择文件");
        }
        ExcelUtil<${classEntity}> util = new ExcelUtil<>(${classEntity}.class);
        List<${classEntity}> list = util.importExcel(file);
        ${className}Service.importData(list, updateSupport);
        return success();
    }

    /**
     * ${tableComment}导出
     * @param form 分页请求参数
     * @return 导出文件
     */
    @Log(title = "${tableComment}导出", businessType = BusinessType.EXPORT)
    @Operation(summary = "${tableComment}导出")
    @ApiOperationSupport(order = 70)
    @PostMapping("/export")
    public SimpleResponseForm<String> export(@RequestBody PageRequestForm<${classEntity}> form) {
        List<${classEntity}> list = ${className}Service.list(form);
        ExcelUtil<${classEntity}> excelUtil = new ExcelUtil<>(${classEntity}.class);
        return success(excelUtil.exportExcel(list, "${tableComment}列表"));
    }
#end
}
